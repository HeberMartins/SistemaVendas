
import beans.Cliente;
import beans.ItemNota;
import beans.Produto;
import beans.Nota;
import dao.ClienteDAO;
import dao.ItemNotaDAO;
import dao.NotaDAO;
import dao.ProdutoDAO;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author felip
 */
public class CadastroNota extends javax.swing.JFrame {

    private Map<Integer, String> mapaClientes = new HashMap<>();
    private Map<Integer, String> mapaProdutos = new HashMap<>();
    private DefaultTableModel tableModel;
    int idCliente;
    int idProduto;
    int idNotaAtual;

    /**
     * Creates new form CadastroNota
     */
    public CadastroNota() {
        initComponents();
        configurarTabela();
        carregarClientes();
        carregarProdutos();
        cbx_cliente.setSelectedIndex(-1);
        cbx_produtos.setSelectedIndex(-1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbx_cliente = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbx_produtos = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txt_vendida = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_data = new javax.swing.JTextField();
        btn_salvar = new javax.swing.JButton();
        btn_limpar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        btnAdicionar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnConsultar = new javax.swing.JButton();
        btnExcluirItem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Lan√ßamento de Nota");

        cbx_cliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbx_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbx_clienteActionPerformed(evt);
            }
        });

        jLabel2.setText("Cliente");

        jLabel3.setText("Produto");

        cbx_produtos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbx_produtos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbx_produtosActionPerformed(evt);
            }
        });

        jLabel4.setText("Qt. Vendida");

        txt_vendida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_vendidaActionPerformed(evt);
            }
        });

        jLabel5.setText("Data de Venda");

        txt_data.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_dataActionPerformed(evt);
            }
        });

        btn_salvar.setText("Salvar");
        btn_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salvarActionPerformed(evt);
            }
        });

        btn_limpar.setText("Limpar");
        btn_limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limparActionPerformed(evt);
            }
        });

        jLabel6.setText("id");

        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnExcluirItem.setText("Excluir Item");
        btnExcluirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(62, 62, 62)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbx_produtos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbx_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_vendida, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnAdicionar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_data, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_salvar)
                        .addGap(60, 60, 60)
                        .addComponent(btn_limpar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConsultar)
                        .addGap(28, 28, 28)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluirItem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbx_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cbx_produtos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_vendida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdicionar))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(btnExcluirItem)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_salvar)
                    .addComponent(btn_limpar)
                    .addComponent(btnConsultar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void configurarTabela() {

        String[] colunas = {"ID Produto", "Produto", "Qtd.", "Pre√ßo Unit.", "Subtotal"};

        tableModel = new DefaultTableModel(colunas, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        jTable1.setModel(tableModel);
    }

    private void cbx_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbx_clienteActionPerformed
        Object selected = cbx_cliente.getSelectedItem();

        if (selected == null) {
            return;
        }

        String nomeSelecionado = selected.toString();
        if (mapaClientes.containsValue(nomeSelecionado)) {

            for (Map.Entry<Integer, String> entry : mapaClientes.entrySet()) {
                if (entry.getValue().equals(nomeSelecionado)) {
                    idCliente = entry.getKey();
                    break;
                }
            }

            NotaDAO notaDAO = new NotaDAO();

            int ultimoId = notaDAO.getUltimoIdNota();

            System.out.println(notaDAO.getUltimoIdNota());

            int proximoId = ultimoId + 1;

            System.out.println(proximoId);

            txtId.setText(String.valueOf(proximoId));

            cbx_cliente.setEnabled(false);
            cbx_produtos.setEnabled(true);
            txt_vendida.setEnabled(true);
            btnAdicionar.setEnabled(true);
        }
    }//GEN-LAST:event_cbx_clienteActionPerformed

    private void txt_vendidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_vendidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_vendidaActionPerformed

    private void txt_dataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_dataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_dataActionPerformed

    private void cbx_produtosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbx_produtosActionPerformed
        // TODO add your handling code here:
        Object selected = cbx_produtos.getSelectedItem();

        if (selected != null) {
            String nomeSelecionado = selected.toString();

            for (Map.Entry<Integer, String> entry : mapaProdutos.entrySet()) {
                if (entry.getValue().equals(nomeSelecionado)) {
                    idProduto = entry.getKey(); // pega o ID correto
                    break;
                }
            }
        }
    }//GEN-LAST:event_cbx_produtosActionPerformed

    private void btn_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salvarActionPerformed
        // TODO add your handling code here:
        Nota novaNota = new Nota();
        novaNota.setCliente(idCliente);

        java.util.Date dataUtil = new java.util.Date();
        java.sql.Date dataSql = new java.sql.Date(dataUtil.getTime());
        novaNota.setData(dataSql.toString());

        NotaDAO notaDAO = new NotaDAO();
        int idNotaGerada = notaDAO.inserirCabecalho(novaNota);

        if (idNotaGerada == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Erro ao salvar o cabe√ßalho da nota. A venda n√£o foi salva.");
            return;
        }

        ItemNotaDAO itemDAO = new ItemNotaDAO();

        for (int i = 0; i < tableModel.getRowCount(); i++) {
            int idProd = (int) tableModel.getValueAt(i, 0);
            int qtd = (int) tableModel.getValueAt(i, 2);
            double preco = (double) tableModel.getValueAt(i, 3);

            ItemNota item = new ItemNota();
            item.setNotaId(idNotaGerada);
            item.setProdutoId(idProd);
            item.setQuantidade(qtd);
            item.setPrecoUnitario(preco);

            itemDAO.inserirItem(item);
        }

        javax.swing.JOptionPane.showMessageDialog(this, "Venda salva com sucesso!");
        limparFormulario();
    }//GEN-LAST:event_btn_salvarActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        // TODO add your handling code here:
        if (txt_vendida.getText().isEmpty()) {
            System.out.println("Por favor, informe a quantidade vendida.");
            return;
        }

        int quantidade = Integer.parseInt(txt_vendida.getText());

        ProdutoDAO produtoDAO = new ProdutoDAO();
        Produto produtoSelecionado = produtoDAO.getProduto(idProduto);

        if (produtoSelecionado == null) {
            System.out.println("Produto n√£o encontrado no banco de dados.");
            return;
        }

        double precoUnitario = produtoSelecionado.getPreco();
        double subtotal = quantidade * precoUnitario;

        Object[] rowData = {
            produtoSelecionado.getId(),
            produtoSelecionado.getNome(),
            quantidade,
            precoUnitario,
            subtotal
        };
        tableModel.addRow(rowData);

        txt_vendida.setText("");
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void limparFormulario() {

        txtId.setText("");
        txt_data.setText("");
        txt_vendida.setText("");

        cbx_cliente.setEnabled(true);
        cbx_cliente.setSelectedIndex(-1);

        cbx_produtos.setSelectedIndex(-1);
        cbx_produtos.setEnabled(false);
        txt_vendida.setEnabled(false);
        btnAdicionar.setEnabled(false);

        tableModel.setRowCount(0);

        this.idNotaAtual = 0;
        this.idCliente = 0;
        this.idProduto = 0;
    }

    private void btn_limparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limparActionPerformed
        limparFormulario();
    }//GEN-LAST:event_btn_limparActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        // TODO add your handling code here:

        LancamentoNota lancamentoNota = new LancamentoNota();

        lancamentoNota.setVisible(true);

    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnExcluirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirItemActionPerformed

        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow != -1) {

            tableModel.removeRow(selectedRow);
        } else {

            javax.swing.JOptionPane.showMessageDialog(this, "Por favor, selecione um item na tabela para excluir.");
        }
    }//GEN-LAST:event_btnExcluirItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroNota().setVisible(true);
            }
        });
    }

    private void carregarClientes() {
        try {
            ClienteDAO clienteDAO = new ClienteDAO();
            List<Cliente> listaClientes = clienteDAO.getClientes();

            cbx_cliente.removeAllItems();
            mapaClientes.clear();

            if (listaClientes != null) {
                for (Cliente c : listaClientes) {
                    cbx_cliente.addItem(c.getNome());
                    mapaClientes.put(c.getId(), c.getNome());
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void carregarProdutos() {
        try {
            ProdutoDAO pDAO = new ProdutoDAO();
            List<Produto> listarProdutos = pDAO.getProdutos();

            cbx_produtos.removeAllItems();
            mapaProdutos.clear();

            if (listarProdutos != null) {
                for (Produto p : listarProdutos) {
                    cbx_produtos.addItem(p.getNome());
                    mapaProdutos.put(p.getId(), p.getNome());
                }
            }

        } catch (Exception e) {

        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnExcluirItem;
    private javax.swing.JButton btn_limpar;
    private javax.swing.JButton btn_salvar;
    private javax.swing.JComboBox<String> cbx_cliente;
    private javax.swing.JComboBox<String> cbx_produtos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txt_data;
    private javax.swing.JTextField txt_vendida;
    // End of variables declaration//GEN-END:variables
}
